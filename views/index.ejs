<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>College Library</title>
    <link rel="stylesheet" href="/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container">
        <!-- Header Section -->
        <div class="header">
            <h1>üìö College Library</h1>
            <p class="subtitle">Discover, Search, and Manage Your Collection</p>
        </div>

        <!-- Navigation -->
        <div class="nav">
            <% if (user) { %>
                <a href="/add" class="btn">‚ûï Add New Book</a>
                <a href="/books" class="btn btn-secondary">üîç Browse All Books</a>
                <form method="POST" action="/logout" style="display:inline;">
                    <button type="submit" class="btn btn-secondary">üö™ Logout</button>
                </form>
            <% } else { %>
                <a href="/books" class="btn btn-secondary">üîç Browse All Books</a>
                <a href="/login" class="btn">üîê Admin Login</a>
            <% } %>
        </div>

        <!-- Search Form -->
        <div class="form-container">
            <form method="GET" action="/" class="search-form" id="searchForm">
                <input type="text" name="name" id="searchInput" placeholder="Search book by name..." autocomplete="off">
                <button type="submit">üîç Search</button>
            </form>
            <div id="searchStatus" class="search-status"></div>
        </div>

        <!-- Search Results -->
        <div id="searchResults">
            <% if (books && books.length > 0) { %>
                <div class="table-container">
                    <h2>üìñ All Books in Library</h2>
                    <p class="search-count">Total: <%= books.length %> book(s)</p>
                    <table>
                        <thead>
                            <tr>
                                <th>üìö Book Name</th>
                                <th>‚úçÔ∏è Author</th>
                                <th>üè¢ Floor</th>
                                <th>üìã Rack No</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% books.forEach(book => { %>
                            <tr>
                                <td><strong><%= book.name %></strong></td>
                                <td><%= book.author %></td>
                                <td><%= book.floor %></td>
                                <td><%= book.rack %></td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            <% } else if (books && books.length === 0) { %>
                <div class="message no-results">
                    <p>üîç No books found. Try a different search term or add a new book to the library.</p>
                </div>
            <% } else { %>
                <div class="message">
                    <p>üëã Welcome to the College Library! Use the search bar above to find books or add new ones to the collection.</p>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        // Get all books data for client-side search
        const allBooks = JSON.parse('<%- JSON.stringify(books || []) %>');
        const searchInput = document.getElementById('searchInput');
        const searchResults = document.getElementById('searchResults');
        const searchStatus = document.getElementById('searchStatus');
        const searchForm = document.getElementById('searchForm');
        
        let searchTimeout;

        // Dynamic search function
        function performSearch(query) {
            if (!query.trim()) {
                // Show all books when search is empty
                if (allBooks.length > 0) {
                    searchResults.innerHTML = `
                        <div class="table-container">
                            <h2>üìñ All Books in Library</h2>
                            <p class="search-count">Total: ${allBooks.length} book(s)</p>
                            <table>
                                <thead>
                                    <tr>
                                        <th>üìö Book Name</th>
                                        <th>‚úçÔ∏è Author</th>
                                        <th>üè¢ Floor</th>
                                        <th>üìã Rack No</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${allBooks.map(book => `
                                        <tr>
                                            <td><strong>${book.name}</strong></td>
                                            <td>${book.author}</td>
                                            <td>${book.floor}</td>
                                            <td>${book.rack}</td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                } else {
                    searchResults.innerHTML = `
                        <div class="message">
                            <p>üìö No books available yet. Add some books to get started!</p>
                        </div>
                    `;
                }
                searchStatus.innerHTML = '';
                return;
            }

            // Show loading state
            searchStatus.innerHTML = '<div class="loading">Searching...</div>';

            // Filter books based on search query
            const filteredBooks = allBooks.filter(book => 
                book.name.toLowerCase().includes(query.toLowerCase()) ||
                book.author.toLowerCase().includes(query.toLowerCase()) ||
                book.floor.toString().includes(query) ||
                book.rack.toString().includes(query)
            );

            // Clear loading state
            searchStatus.innerHTML = '';

            // Display results
            if (filteredBooks.length > 0) {
                searchResults.innerHTML = `
                    <div class="table-container">
                        <h2>üìñ Search Results for "${query}"</h2>
                        <p class="search-count">Found ${filteredBooks.length} book(s)</p>
                        <table>
                            <thead>
                                <tr>
                                    <th>üìö Book Name</th>
                                    <th>‚úçÔ∏è Author</th>
                                    <th>üè¢ Floor</th>
                                    <th>üìã Rack No</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${filteredBooks.map(book => `
                                    <tr>
                                        <td><strong>${book.name}</strong></td>
                                        <td>${book.author}</td>
                                        <td>${book.floor}</td>
                                        <td>${book.rack}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                `;
            } else {
                searchResults.innerHTML = `
                    <div class="message no-results">
                        <p>üîç No books found for "${query}". Try a different search term or add a new book to the library.</p>
                    </div>
                `;
            }
        }

        // Handle input changes with debouncing
        searchInput.addEventListener('input', function(e) {
            const query = e.target.value;
            
            // Clear previous timeout
            clearTimeout(searchTimeout);
            
            // Set new timeout for search (300ms delay)
            searchTimeout = setTimeout(() => {
                performSearch(query);
            }, 300);
        });

        // Handle form submission (fallback for non-JS users)
        searchForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const query = searchInput.value;
            performSearch(query);
        });

        // Initialize with current search query if any
        const urlParams = new URLSearchParams(window.location.search);
        const initialQuery = urlParams.get('name');
        if (initialQuery) {
            searchInput.value = initialQuery;
            performSearch(initialQuery);
        }
    </script>
</body>
</html>

